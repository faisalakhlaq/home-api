# Generated by Django 4.2 on 2024-02-17 14:25

import apps.properties.models.property
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Property",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Price of the property.",
                        max_digits=13,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "price_currency",
                    models.CharField(
                        help_text="Provide the currency abbreviations for the price. (3-letter acronym for the currency).",
                        max_length=5,
                    ),
                ),
                (
                    "area",
                    models.FloatField(
                        help_text="Coverd area of the property in square meters.The covered area\n        of a property typically refers to the total indoor living area, including\n        all rooms, hallways, and any other enclosed spaces within the structure.",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "total_area",
                    models.FloatField(
                        help_text="Total ground area of the property. The total ground space\n        available refers to the entire area of land upon which the house is built,\n        including any outdoor spaces such as yards, gardens, driveways, etc.",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "measured_area",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "total_rooms",
                    models.FloatField(
                        blank=True,
                        help_text="Total number of rooms in the property.",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "toilets",
                    models.IntegerField(
                        blank=True,
                        help_text="Total number of toilets in the property.",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "construction_year",
                    models.IntegerField(
                        blank=True,
                        help_text="Year in which the property was built.",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            apps.properties.models.property.max_value_current_year,
                        ],
                    ),
                ),
                (
                    "renovation_year",
                    models.IntegerField(
                        blank=True,
                        help_text="Year in which the property was built.",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            apps.properties.models.property.max_value_current_year,
                        ],
                    ),
                ),
                (
                    "total_floors",
                    models.IntegerField(
                        blank=True,
                        help_text="Total number of floors and stories the property conprises of.",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "heating",
                    models.CharField(
                        blank=True,
                        help_text="e.g. Heating installation. e.g. Central heating with one\n        heating unit.",
                        max_length=255,
                    ),
                ),
                (
                    "outer_walls",
                    models.CharField(
                        blank=True, help_text="e.g. Brick.", max_length=255
                    ),
                ),
                (
                    "roof_type",
                    models.CharField(
                        blank=True, help_text="e.g. Tile.", max_length=255
                    ),
                ),
                (
                    "address",
                    models.ForeignKey(
                        help_text="Address of the property.",
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="address_properties",
                        to="core.address",
                    ),
                ),
            ],
            options={
                "verbose_name": "Property",
                "verbose_name_plural": "Properties",
            },
        ),
    ]
