name: Merge into Main

on:
  pull_request:
    branches: [main]

  push:
    branches: [main]

  workflow_dispatch:

jobs:
  merge-into-main:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write

    steps:
      - name: Check trigger type
        id: check_trigger
        run: |
          trigger_type=""
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            trigger_type="manual"
          elif [ "${{ github.event_name }}" = "pull_request" ]; then
            if [ "${{ github.event.pull_request.base.ref }}" = 'main' ] && [ "${{ github.event.pull_request.head.ref }}" != 'development' ]; then
              trigger_type="direct_pr"
            elif [ "${{ github.event.pull_request.base.ref }}" = 'main' ] && [ "${{ github.event.pull_request.head.ref }}" = 'development' ]; then
              trigger_type="dev_to_main_pr"
            fi
          else
            trigger_type="direct_push"
          fi
          echo "trigger_type=$trigger_type" >> $GITHUB_OUTPUT

      - name: Verify PR CI Pipeline passed for development
        if: steps.check_trigger.outputs.trigger_type == 'manual' || steps.check_trigger.outputs.trigger_type == 'dev_to_main_pr'
        uses: actions/github-script@v6
        with:
          script: |
            const { data: runs } = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'pr.yml',
              branch: 'development',
              status: 'completed',
              per_page: 1
            });

            if (runs.workflow_runs.length === 0 || runs.workflow_runs[0].conclusion !== 'success') {
              core.setFailed('The PR CI Pipeline has not passed successfully for development branch');
            }

      - name: Merge development into main
        if: steps.check_trigger.outputs.trigger_type == 'manual' || steps.check_trigger.outputs.trigger_type == 'dev_to_main_pr'
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: development
          target_branch: main
          github_token: ${{ secrets.GITHUB_TOKEN }}
          commit_message: "Merge development into main"

      - name: Block direct PR or pushes to main
        if: steps.check_trigger.outputs.trigger_type == 'direct_push' || steps.check_trigger.outputs.trigger_type == 'direct_pr'
        run: |
          echo "::error::Direct pushes to main are not allowed."
          exit 1
