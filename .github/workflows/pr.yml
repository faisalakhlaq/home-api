name: PR CI Pipeline

on:
  pull_request:
    branches:
      - development
  workflow_dispatch:

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    env:
      DEBUG: "False"
      DATABASE_NAME_MYSQL: test_db
      DATABASE_USER_MYSQL: root     
      DATABASE_HOST_MYSQL: 127.0.0.1
      DATABASE_PORT_MYSQL: 3306
      DATABASE_PASSWORD: root       
      SECRET_KEY: dummy-key-for-ci  
      ALLOWED_HOSTS: "*"            
      CORS_ALLOWED_ORIGINS: "*"     
      CORS_ALLOW_CREDENTIALS: "True"
      DJANGO_SETTINGS_MODULE: "settings.production"

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: root
          MYSQL_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt', '**/requirements-dev.txt', '**/requirements-prod.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-prod.txt

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -uroot -proot --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL... attempt $i"
            sleep 2
          done
          mysqladmin ping -h 127.0.0.1 -uroot -proot --silent || { echo "MySQL did not become ready in time. Exiting."; exit 1; }

      - name: Install CI/CD tools
        run: |
          pip install -r requirements-dev.txt
          pip install black pip-audit

      - name: Run Black
        run: black --check .

      - name: Run Flake8
        run: flake8 . --max-line-length=120

      - name: Run MyPy
        run: mypy .

      - name: Run Bandit
        run: bandit -r . -ll -f custom -o bandit_report.txt || true

      - name: Run pip-audit
        run: pip-audit || true

      - name: Check for pending migrations
        run: python manage.py makemigrations --check --dry-run

      - name: Run Django tests
        run: |
          python manage.py test --noinput

      - uses: 5monkeys/cobertura-action@master
        if: always()  # Run even if previous steps fail
        with:
          path: backend/coverage.xml
          minimum_coverage: 75