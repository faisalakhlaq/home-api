name: PR CI Pipeline

on:
  pull_request:
    branches: [development]

  push:
    branches: [development]
    paths-ignore:
      - '**.md'  # Exclude docs-only changes
    if: "!contains(github.event.head_commit.message, 'Merge pull request')"

  workflow_dispatch:

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    env:
      DEBUG: "False"
      DATABASE_NAME_MYSQL: test_db
      DATABASE_USER_MYSQL: root
      DATABASE_HOST_MYSQL: 127.0.0.1
      DATABASE_PORT_MYSQL: 3306
      DATABASE_PASSWORD: root
      SECRET_KEY: dummy-key-for-ci  
      ALLOWED_HOSTS: "*"            
      CORS_ALLOWED_ORIGINS: "*"     
      CORS_ALLOW_CREDENTIALS: "True"
      DJANGO_SETTINGS_MODULE: "settings.production"

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Debug Event
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Commit Message: ${{ github.event.head_commit.message }}"

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements*.txt') }}

      - name: Install all dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt -r requirements-prod.txt -r requirements-dev.txt

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            mysqladmin ping -h 127.0.0.1 -uroot -proot --silent && break
            echo "Waiting for MySQL... attempt $i"; sleep 2
          done
          mysqladmin ping -h 127.0.0.1 -uroot -proot --silent || exit 1

      # --- Quality Checks ---
      - name: Run Black (Code Formatting)
        run: black --check . --diff  # Show diffs on failure

      - name: Run Flake8
        run: flake8 . --max-line-length=120 --statistics

      - name: Run MyPy (Static Typing)
        run: mypy . --show-error-codes

      - name: Check outdated dependencies
        run: pip list --outdated

      - name: Check code complexity (strict mode)
        run: radon cc . -nc --min B

      - name: Ensure modern setuptools
        run: python -m pip install --upgrade pip setuptools>=78.1.1

      - name: Security scans
        run: |
          bandit -r . -ll -o bandit_report.txt
          pip-audit
        # pip-audit || true

      # --- Django Checks ---
      - name: Validate Django
        run: |
          python manage.py check
          python manage.py makemigrations --check --dry-run

      - name: Run tests with coverage
        run: |
          coverage run --source='.' manage.py test
          coverage xml

      - uses: codecov/codecov-action@v3
        if: always()
        with:
          file: coverage.xml
          fail_ci_if_error: false  # Don't fail if coverage upload fails
